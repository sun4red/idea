[1번 문제] <DB>

문제 : RPO
답 : 데이터를 복구할 수 있는 기점


[2번 문제] <소프트웨어 패키징>

문제 : SCM, Software Configuration Management
답 : 개발 과정에서 소프트웨어의 변경 사항을 관리하기 위해 개발된 일련의 활동

소프트웨어 개발 단계의 각 과정에서 만들어지는 프로그램, 프로그램을 설명하는 문서, 데이터 등을 관리하는 것

소프트웨어의 개발 과정에서 만들어지는 여러 버전들의 변경사항을 관리하는 일련의 활동

대표적인 형상 관리 도구 : Git, SVN, CVS


[3번 문제] <보안>

문제 : HTTPS(HyperText Transfer Protocol Secure)
답 : 웹브라우저-서버 간 안전한 통신


[4번 문제] <네트워크>

문제 : RIP, Routing Information Protocol
답 : 벡터라우팅 프로토콜, 가장 널리 사용되며 Bellman-Ford 알고리즘 사용


[5번 문제] <보안솔루션>

문제 : 사용자 컴퓨터 자원 접근에 대한 처리와 서비스를 제공하는 기반 구조 또는 규격
답 : AAA


[6번 문제] <요구사항>

문제 : SADT
답 : 시스템정의, 소프트웨어 요구사항 분석, 시스템/소프트웨어 설계도구

SoftTech사 개발


[7번 문제] <자료흐름도>

문제 : 시스템에서의 자료 저장소 (파일, 데이터베이스)
답 : 자료 저장소 (Data Store)


[8번 문제] <DB>

문제 : 데이터에 접근하는 사용자의 신원에 따라 권한 부여
답 : DAC


[9번 문제] <OSI 참조 모델>

문제 : OSI 전 계층의 프로토콜 구조가 다른 네트워크를 연결하는 장치
LAN에서 다른 네트워크에 데이터를 보내거나 다른 네트워크로부터 데이터를 받아들이는 출입구 역할
답 : Gateway


[10번 문제] <소프트웨어 패키징>

문제 : 버전 제어
답 : 소프트웨어 업그레이드나 유지 보수 과정에서 생성된 다른 버전의 형상 항목을 관리하고, 이를 위해 특정 절차나 도구(Tool)를 결합시키는 작업


[11번 문제] <디자인 패턴>

문제 : 여러 객체를 가진 복합 객체와 단일 객체를 구분 없이 다루고자 할 때 사용
객체들을 트리 구조로 구성하여 디렉터리 안에 디렉터리가 있듯이 복합 객체 안에 복합 객체가 포함되는 구조를 구현할 수 있음
답 : Composite


[12번 문제] <디자인 패턴>

문제 : State
답 : 객체의 상태에 따라 동일한 동작을 다르게 처리


[13번 문제] <모듈>

문제 : 모듈 내 하나의 활동으로부터 나온 출력 데이터를 그다음 활동의 입력 데이터로 사용할 경우
답 : 순차적 응집도
(Sequential Cohesion)


[14번 문제] <UML>

문제 : 인스턴스를 특정 시점의 객체와 객체 사이의 관계로 표현
롬바우 객체 지향 분석 기법 내 객체 모델링 활요
답 : 객체 다이어그램
(Object Diagram)


[15번 문제] <소프트웨어 개발 모형>

문제 : XP의 주요 실천방법
답 : Pair Programming
(짝 프로그래밍)
Whole Team
(전체 팀)
Collective Ownership
(공동 코드 소유)
Continuous Integration
(계속적인 통합)
Test-Driven Development
(테스트 주도 개발)
Refactoring
(리팩토링)
Small Releases
(소규모 릴리즈)


[16번 문제] <소프트웨어 패키징>

문제 : 형상 관리 대상에 이름과 관리 번호를 부여하고, 계층(Tree)구조로 구분하여 수정 및 추적이 용이하도록 하는 작업
답 : 형상 식별


[17번 문제] <보안솔루션>

문제 : 내부 정보의 외부 유출 방지하는 보안솔루션

사내 직원이 사용하는 PC와 네트워크 상의 모든 정보를 검색, 사용자 행위 탐지, 통제, 외부로의 유출 사전 방지
답 : 데이터 유출 방지(DLP, Data Leakage/Loss Prevention)


[18번 문제] <UML>

문제 : 하나의 사물이 다른 사물에 비해 더 일반적이거나 구체적인 관계
답 : 일반화관계


[19번 문제] <애플리케이션 테스트>

문제 : 통합 테스트로 인해 변경된 모듈이나 컴포넌트에 새로운 오류가 있는지 확인하는 테스트

이미 테스트 된 프로그램의 테스팅을 반복
답 : 회귀 테스트 (Regression Test)


[20번 문제] <자료흐름도>

문제 : 자료흐름 (Data Flow)
답 : 자료의 이동이나 연관관계


[21번 문제] <디자인 패턴>

문제 : Interpreter
답 : 언어에 문법 표현을 정의


[22번 문제] <프로세스>

문제 : 프로그램이나 데이터가 들어갈 수 있는 크기의 빈 영역 중에서 첫 번째 분할 영역에 배치
답 : 최초 적합(First Fit)


[23번 문제] <모듈>

문제 : 모듈 간의 인터페이스로 배열이나 레코드 등의 자료 구조가 전달
답 : 스탬프 결합도
(Stamp Coupling)


[24번 문제] <프로세스>

문제 : 보조기억장치의 일부를 주기억장치처럼 사용하는 것

용량이 작은 주기억장치를 큰 용량을 가진 것처럼 사용하는 기법
답 : 가상기억장치(Virtual Memory)


[25번 문제] <소프트웨어 패키징>

문제 : 빌드를 포함하여 테스트 및 배포를 자동화 하는 도구

애자일(Agile)과 같은 지속적인 통합(Continuous Integration) 개발 환경에서 유용하게 활용

빌드 자동화 도구 종류 : Jenkins, Gradle, Ant, Maven, Make 등
답 : 빌드 자동화 도구


[26번 문제] <디자인 패턴>

문제 : Factory Method
답 : 객체 생성을 서브클래스에서 처리하도록 분리하여 캡슐화
상위 클래스에서 인터페이스만 정의, 실제 생성은 서브 클래스가 담당


[27번 문제] <디자인 패턴>

문제 : Builder
답 : 작게 분리된 인스턴스를 건축 하듯이 조합하여 객체 생성


[28번 문제] <프로세스>

문제 : 실행 중인 프로그램이 특정 프로그램이나 데이터 등의 참조를 요구할 때 적재하는 방법
답 : 요구 반입(Demand Fetch)


[29번 문제] <소프트웨어 패키징>

문제 : 형상 감사
답 : 기준선의 무결성을 평가하기 위해 확인, 검증, 검열 과정을 통해 공식적으로 승인하는 작업


[30번 문제] <자료흐름도>

문제 : 자료를 변환시키는 시스템의 한부분을 나타냄
처리, 기능, 변환, 버블이라고도 함
답 : 프로세스 (Process)


[31번 문제] <보안솔루션>

문제 : NAC(Network Access Control)
답 : 네트워크에 접속하는 내부 PC의 MAC주소를 IP관리시스템에 등록 후 일관된 보안관리 기능 제공 보안솔루션, 내부 PC의 SW사용현황 관리, 불법 SW설치 방지


[32번 문제] <프로세스>

문제 : 세그멘테이션 기법(Segmentation)
답 : 프로그램을 다양한 크기의 논리적인 단위로 나눈 후 주기억장치에 적재시켜 실행시키는 기법


[33번 문제] <네트워크>

문제 : 사이트 간 거리가 짧아 전송속도가 빠르고 에러발생률이 낮음
답 : LAN, Local Area Network


[34번 문제] <객체 지향>

문제 : 객체는 단 하나의 책임만
답 : SRP


[35번 문제] <DB>

문제 : 갱신 이상(Update Anomaly)
답 : 테이블에서 튜플에 있는 속성 값을 갱신할 때 일부 튜플의 정보만 갱신되어 정보에 불일치성(Inconsistency)이 생기는 현상


[36번 문제] <애플리케이션 테스트>

문제 : 1. 하위 모듈들을 클러스터(Cluster)로 결합
2. 상위 모듈에서 데이터 입, 출력을 확인하기 위해 더미 모듈인  드라이버(Driver)작성
3. 통합된 클러스터 단위로 테스트
4. 테스트가 완료되면 클러스터는 프로그램 구조의 상위로 이동하여 결합하고 드라이버는 실제 모듈로 대체
답 : 상향식 통합 테스트


[37번 문제] <소프트웨어 개발 모형>

문제 : 절차나 형식 보다는 사람이 중심이 되어 사용자의 요구 변화에 신속하게 대응, 소규모 반복적 SW개발 방법론 

핵심가치

- 사람 중심
- 소프트웨어 중심
- 협업 중심
- 변화 대응

특징

- 요구변화 민첩
- 신속한 피드백
- 점진적 반복 개발
- 소규모 개발
답 : 애자일 (Agile)


[38번 문제] <프로세스>

문제 : 비선점 스케줄링(Non-Preemptive)
답 : 이미 할당된 CPU를 다른 프로세서가 강제로 뺏을 수 없음(일괄처리 방식에 적합)


[39번 문제] <DB>

문제 : 서버와 저장장치 전용 케이블로 직접 연결
답 : DAS


[40번 문제] <보안>

문제 : SQL Injection
답 : 웹 응용프로그램에 SQL을 삽입하여 내부 DB서버의 데이터를 유출, 변조, 관리자 인증 우회

동적쿼리에 사용되는 입력 데이터에 예약어 및 특수문자가 입력되지않도록 설정하여 방지


[41번 문제] <DB>

문제 : 접근한 데이터에 대한 연산을 마칠 때 까지 추가적인 접근을 제한, 상호배타적으로 접근하여 작업을 수행하도록 하는 병행제어 기법
답 : 로킹


[42번 문제] <자료흐름도>

문제 : DFD, Data Flow Diagram
답 : 요구사항 분석에서 자료의 흐름 및 변환 과정과 기능을 도형 중심으로 기술하는 방법

자료흐름과 처리를 중심으로 하는 구조적 분석기법에 이용(자료흐름 그래픔, 버블차트)


[43번 문제] <UI, UX>

문제 : 사용자의 말이나 행동 등으로 기기 조작
답 : NUI (Natural User Interface)


[44번 문제] <프로세스>

문제 : FIFO
(First In First Out)
답 : 가장 먼저 들어와서 가장 오래 있었던 페이지 교체


[45번 문제] <OSI 참조 모델>

문제 : 오류제어, 흐름제어, 혼잡제어

호스트들 간의 신뢰성 있는 통신 제공
답 : 전송 계층
(Transport)


[46번 문제] <프로세스>

문제 : FCFS(First Come First Service)
답 : 준비상태 큐에 도착한 순서에 따라 CPU할당


[47번 문제] <모듈>

문제 : 모듈 내부의 모든 기능 요소들이 단일 문제와 연관되어 수행
답 : 기능적 응집도
(Functional Cohesion)


[48번 문제] <UI, UX>

문제 : Prototype
답 : 실제 구형된 것처럼 테스트가 가능한 동적인 형태


[49번 문제] <UML>

문제 : 서로에게 영향을 주는 짧은 시간 동안만 연관을 유지하는 관계
답 : 의존관계


[50번 문제] <디자인 패턴>

문제 : 복잡한 상호작용을 캡슐화하여 객체로 정의
객체 사이의 의존성을 줄여 결합도를 감소
답 : Mediator


[51번 문제] <UML>

문제 : 상호작용 다이어그램 간의 제어 흐름 표현
답 : 상호작용 개요 다이어그램
(Interaction Overview Diagram)


[52번 문제] <보안>

문제 : 보안요소를 고려하여 코딩, 보안정책을 바탕으로 가이드 작성
답 : 시큐어코딩(Secure Coding)


[53번 문제] <디자인 패턴>

문제 : Strategy
답 : 동일한 계열의 알고리즘들을 개별적으로 캡슐화하여 상호 교환
클라이언트는 독립적으로 알고리즘 선택, 클라이언트에 영향 없이 알고리즘 변경 가능


[54번 문제] <보안솔루션>

문제 : 정보보호관리체계(ISMS, Information Security Management System)
답 : 정보자산을 안전하게 보호하기위한 보호절차와 대책, 한국인터넷진흥원(KISA)에서 운영


[55번 문제] <디자인 패턴>

문제 : Observer
답 : 한 객체의 상태가 변화하면 객체에 상속되어 있는 다른 객체들에게 변화된 상태를 전달하는 패턴
분산된 시스템 간에 이벤트를 생성, 발행하고 이를 수신해야할 때 이용


[56번 문제] <UML>

문제 : 클래스 다이어그램
(Class Diagram)
답 : 클래스와 클래스가 갖는 속성, 클래스 사이의 관계 표현


[57번 문제] <소프트웨어 패키징>

문제 : 형상의 식별, 통제, 감사 작업의 결과를 기록 · 관리하고 보고서를 작성하는 작업
답 : 형상 기록


[58번 문제] <애플리케이션 테스트>

문제 : 여러버전의 프로그램에 동일한 테스트 자료 제공, 동일한 결과 출력되는지 테스트
답 : 비교검사 Comparison Testing


[59번 문제] <프로세스>

문제 : 실행중인 프로그램을 의미, PCB를 가진 프로그램, 실 기억장치에 저장된, 프로세서가 할되는 실체, 디스패치 가능한 단위, 프로시저가 활동 중인 것, 비동기적 행위를 일으키는 주체, 운영체제가 관리하는 실행 단위
답 : 프로세스(Process)


[60번 문제] <RAID>

문제 : 오류 정정 부호를 블록 단위로 여러 디스크에 분산 저장한 방식

하나의 디스크가 손상되어도 정상 가동 가능, 최소 3개의 디스크 필요
답 : RAID 5


[61번 문제] <네트워크>

문제 : WAN, Wide Area Network
답 : 국가/대륙 간 사이트 연결

거리가 멀어 통신속도가 느리고 에러발생률이 높음


[62번 문제] <디자인 패턴>

문제 : 자료 구조와 같이 접근이 잦은 객체에 대해 동일한 인터페이스를 사용하도록 하는 패턴
답 : Iterator


[63번 문제] <프로세스>

문제 : Locality
답 : 프로세스가 실행되는 동안 주기억장치를 참조할 때 일부페이지만 집중적으로 참조하는 성질


[64번 문제] <프로세스>

문제 : 프로그램을 일정한 크기로 나눈 단위
답 : Page


[65번 문제] <보안솔루션>

문제 : 침입탐지시스템(IDS, Instrusion Detection System)
답 : 컴퓨터 시스템의 비정상적인 사용, 오용, 남용 등을 실시간 탐지

오용 탐지(Misuse Detection) : 미리 입력해둔 공격패턴 감지

이상 탐지(Anomaly Detection) : 평균적인 시스템의 상태를 기준으로 비정상적인 행위나 자원의 사용 감지


[66번 문제] <보안>

문제 : SYN Flooding
답 : 3-way-handshaking 과정을 의도적으로 중단, 서버가 대기상태에 놓여 정상적인 서비스 수행 불가


[67번 문제] <DB>

문제 : Undo
답 : 시작(Start)은 있지만 완료(Commit)에 대한 기록은 없는 트랜잭션들이 작업한 변경 내용들 모두 취소


[68번 문제] <프로세스>

문제 : LRU
(Least Recently Used)
답 : 최근에 가장 오랫동안 사용하지 않은 페이지를 교체


[69번 문제] <UI, UX>

문제 : StoryBoard
답 : 와이어프레임에 콘텐츠에 대한 설명, 페이지 간 이동 흐름 등을 추가한 문서

ppt, 키노트, 스케치, Axure


[70번 문제] <보안>

문제 : Tear Drop
답 : offset 값을 변경시켜 수신 측에서 패킷을 재조립 할 때 오류로 인한 과부하를 발생시켜 시스템 다운


[71번 문제] <프로세스>

문제 : 프로그램이나 데이터를 언제 주기억장치로 적재할 것 인지를 결정하는 전략
답 : 반입 전략(Fetch)


[72번 문제] <디자인 패턴>

문제 : 특정 시점에서의 객체 내부 상태를 객체화함으로써 이후 요청에 따라 객체를 해당 시점의 상태로 돌릴 수 있는 기능을 제공
답 : Memento


[73번 문제] <보안>

문제 : 크로스사이트 스크립팅(XSS)
답 : 웹페이지에 악의적인 스크립트를 삽입하여 정보를 탈취하거나 비정상적인 기능 수행 유발

HTML태그의 사용제한, 스트립트에 삽입되지 않도록 ‘<’, ‘>’, ‘&’ 등의 문자를 다른 문자로 치환하여 방지


[74번 문제] <프로세스>

문제 : LFU
(Least Frequently Used)
답 : 사용빈도가 가장 적은 페이지를 교체
활발하게 사용되는 페이지는 사용횟수가 많아 교체가 되지 않는다.


[75번 문제] <OSI 참조 모델>

문제 : Repeater
답 : 거리가 증가할수록 감쇠하는 디지털 신호의 장거리 전송을 위해 수신한 신호를 재생시키거나 출력 전앞을 높여 전송하는 장치


[76번 문제] <애플리케이션 성능 측정 지표>

문제 : 작업 의뢰 부터 처리 완료까지의 시간
답 : 경과 시간 (Turn Around Time)


[77번 문제] <공격 기법>

문제 : 키로거 공격(Key Logger Attack)
답 : 컴퓨터 사용자의 키보드 움직임을 탐지해 정보를 몰래 빼가는 해킹공격


[78번 문제] <애플리케이션 테스트>

문제 : 소스코드 모든 구문 한번 이상 수행
답 : 문장검증기준 Statement Coverage


[79번 문제] <보안>

문제 : Ping of Death
답 : 패킷의 크기를 허용 범위 이상으로 전송(ICMP 패킷), 네트워크 마비시키는 서비스 거부공격 큰 패킷 → 대량의 분할된 패킷 재조립 부담, 각각의 ICMP Ping 메시지에 응답처리, 시스템 다운


[80번 문제] <DB>

문제 : 둘 이상의 트랜잭션 병행 실행되는 경우, 어느 하나의 트랜잭션 실행 중에 다른 트랜잭션의 연산이 끼어들 수 없음
답 : 트랜잭션의 독립성


[81번 문제] <애플리케이션 테스트>

문제 : 과거의 경험이나 확인자의 감각으로 테스트
답 : 오류 예측 검사 Error Guessing


[82번 문제] <네트워크>

문제 : 프로토콜
답 : 다른 기기들 간의 데이터 교환을 원활하게 수행할 수 있도록 표준화 시켜놓은 통신 규약


[83번 문제] <공격 기법>

문제 : Sniffing
답 : 네트워크의 중간에서 남의 패킷 정보를 도청


[84번 문제] <객체 지향>

문제 : Rumbaugh 분석 기법
답 : 모든 소프트웨어 구성요소를 그래픽 표기법을 이용하여 모델링


[85번 문제] <DB>

문제 : 즉각 갱신 기법
답 : 트랙잭션이 부분 완료되기 전이라도 즉시 데이터베이스 반영


[86번 문제] <소프트웨어 패키징>

문제 : Java 기반의 오픈소스 형태, 서블릿 컨테이너에서 실행되는 서버 기반 도구

가장 많이 사용

SVN, Git 등 대부분의 형상 관리 도구와 연동이 가능

친숙한 Web GUI 제공으로 사용이 쉬움
답 : Jenkins


[87번 문제] <보안솔루션>

문제 : 웹 기반 공격(SQL삽입공격, XSS) 방어할 목적
답 : 웹 방화벽(Web Firewall)


[88번 문제] <보안>

문제 : TKIP(Temporal Key Integrity Protocol)
답 : WEP의 취약성을 보완한 데이터 보안 프로토콜, 암호입력 키 길이 128비트, 패킷당 키 할당, 재설정등 관리방식 개선


[89번 문제] <애플리케이션 테스트>

문제 : 동치분할검사 Equivalence Partitioning Testing
답 : 타당한 입력자료와 타당하지않은 입력자료의 개수를 균등하게 하여 맞는 결과가 출력되는지 확인


[90번 문제] <보안>

문제 : SSL(Secure Socket Layer)
답 : TCP/IP 계층과 애플리케이션 계층 사이에 위치, 인증, 암호화, 무결성 보장하는 업계 표준 프로토콜


[91번 문제] <보안>

문제 : 미국 NBS에서 발표한 개인키 암호화 알고리즘, 블록크기 64비트, 길이 56비트, 16회 라운드 수행
답 : DES(Data Encryption Standard)


[92번 문제] <객체 지향>

문제 : 기능 모델링 (Function)
답 : 자료흐름도

다수 프로세스 간의 자료흐름을 중심으로 처리과정 표현


[93번 문제] <프로세스>

문제 : Working Set
답 : 집중되는 페이지의 집합


[94번 문제] <공격 기법>

문제 : 활용되지 않고 저장만 되어있는 대량의 데이터
답 : 다크 데이터(Dark Data)


[95번 문제] <객체 지향>

문제 : DIP
답 : 의존관계 성립 시 추상성이 높은 클래스와 의존관계를 맺음


[96번 문제] <디자인 패턴>

문제 : 서브 클래스들 사이의 통합 인터페이스를 제공하는 Wrapper 객체가 필요
복잡한 서브클래스들을 피해 더 상위에 인터페이스를 구성, 서브클래스들의 기능을 간편하게 사용할 수 있도록 하는 패턴
답 : Façade


[97번 문제] <OSI 참조 모델>

문제 : 가상 회선 방식을 기반으로 하는 양방향 연결 서비스 제공

패킷의 분해/조립, 주소 지정, 경로 선택 기능 제공
답 : TCP


[98번 문제] <보안>

문제 : 스택가드(Stack Guard)
답 : 주소가 저장되는 스택에서 발생하는 보안약점 막는 기술

메모리 상에서 프로그램의 복귀 주소와 변수 사이에 특정값을 저장, 그 값이 변경되었을 경우 오버플로우 상태로 판단, 프로그램 중단


[99번 문제] <소프트웨어 패키징>

문제 : Subversion(SVN)
답 : CVS를 개선한 것으로 아파치 소프트웨어 재단에서 2000년에 발표

소스가 오픈되어 있어 무료로 사용할 수 있음

CVS의 단점이었던 파일이나 디렉터리의 이름 변경, 이동 등이 가능


[100번 문제] <애플리케이션 테스트>

문제 : 분기검증기준 Branch Coverage
답 : 모든 조건문에 대해 조건식의 결과가 True인 경우, False인 경우 한번 이상실행


