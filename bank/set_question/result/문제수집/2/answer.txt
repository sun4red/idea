[1번 문제] <모듈>

문제 : 모듈 내부의 각 구성 요소들이 서로 관련 없는 요소로만 구성
답 : 우연적 응집도
(Coinfidental Cohesion)


[2번 문제] <소프트웨어 개발 모형>

문제 : 실제 결과물이 나오는 반복 주기를 가지며, 많은 회의
답 : SCRUM


[3번 문제] <공격 기법>

문제 : 다크 데이터(Dark Data)
답 : 활용되지 않고 저장만 되어있는 대량의 데이터


[4번 문제] <객체 지향>

문제 : ISP
답 : 자신이 사용하지 않는 인터페이스와 의존관계를 맺거나 영향을 받지 않아야 한다


[5번 문제] <네트워크>

문제 : 송 수신 측 사이에 전송되는 패킷 양이나 속도 규제
답 : 흐름제어(Flow Control)


[6번 문제] <프로세스>

문제 : 프로그램이나 데이터가 들어갈 수 있는 크기의 빈 영역 중에서 첫 번째 분할 영역에 배치
답 : 최초 적합(First Fit)


[7번 문제] <객체 지향>

문제 : 캡슐화

세부내용 은닉

결합도 ▼, 재사용성 ▲, 단순화

상속

상위클래스의 모든 속성과 연산을 하위클래스가 물려받음

다형성

하나의 메시지에 대해 각각의 객체가 고유한 방법으로 응답

연관성
답 : 특징


[8번 문제] <보안>

문제 : HTTPS(HyperText Transfer Protocol Secure)
답 : 웹브라우저-서버 간 안전한 통신


[9번 문제] <UML>

문제 : 유스케이스 다이어그램
(Use Case Diagram)
답 : 사용자의 요구를 분석하는 것으로, 기능 모델링 작업에 사용
사용자(Actor)와 사용 사례(Use Case)로 구성


[10번 문제] <DB>

문제 : RBAC
답 : 사용자의 역할에 따라 접근 권한 부여


[11번 문제] <DB>

문제 : 삽입 이상(Insertion Anomaly)
답 : 데이터를 삽입 할 때 의도와는 상관없이 원하지 않은 값들로 인해 삽입할 수 없게 되는 현상


[12번 문제] <자료흐름도>

문제 : 프로세스 (Process)
답 : 자료를 변환시키는 시스템의 한부분을 나타냄
처리, 기능, 변환, 버블이라고도 함


[13번 문제] <애플리케이션 테스트>

문제 : 입력조건의 경계값을 테스트케이스로 선정
답 : 경계값 분석 Boundary Value Analysis


[14번 문제] <OSI 참조 모델>

문제 : Repeater
답 : 거리가 증가할수록 감쇠하는 디지털 신호의 장거리 전송을 위해 수신한 신호를 재생시키거나 출력 전앞을 높여 전송하는 장치


[15번 문제] <애플리케이션 테스트>

문제 : 각 기능이 완전히 작동되는 것을 입증

사용자의 요구사항 명세를 보면서 테스트

구현된 기능 테스트

소프트웨어 인터페이스로 실시
답 : 블랙박스 테스트


[16번 문제] <애플리케이션 테스트>

문제 : 개별 조건식의 결과가 True인 경우, False인 경우 한번 이상 수행
답 : 조건검증기준 Condition Coverage


[17번 문제] <프로세스>

문제 : 가장 먼저 들어와서 가장 오래 있었던 페이지 교체
답 : FIFO
(First In First Out)


[18번 문제] <프로세스>

문제 : SRT
(Shortert Remaining Time)
답 : 현재 실행 중인 프로세스의 남은 시간과 새로 도착한 프로세스의 실행시간 비교하여 가장 짧은 실행 시간을 요구하는 프로세스에게 CPU할당
시분할 시스템에 유용, 준비상태 큐에 있는 각 프로세스 실행시간을 추적하여 보유, 오버헤드가 많음


[19번 문제] <UI, UX>

문제 : Prototype
답 : 실제 구형된 것처럼 테스트가 가능한 동적인 형태


[20번 문제] <OSI 참조 모델>

문제 : 전송 계층
(Transport)
답 : 오류제어, 흐름제어, 혼잡제어

호스트들 간의 신뢰성 있는 통신 제공


[21번 문제] <DB>

문제 : 복구되어 가동될 때 까지의 소요시간
답 : RTO


[22번 문제] <RAID>

문제 : RAID 0
답 : 스트라이핑(Striping)

디스크를 병렬로 연결하여 디스크의 개수만틈 용량과 속도가 배로 증가

하나의 디스크만 손상되어도 전체 데이터가 파손


[23번 문제] <프로세스>

문제 : 시간 할당량 만큼만 실행한 후 완료되지 않으면 다음 프로세스에게 CPU를 넘겨줌
할당되는 시간이 클 경우 : FCFS 기법과 같아짐, 할당되는 시간이 작을 경우 : 문맥교환, 오버헤드가 많아지고 신속히 처리되지 않음
답 : RR
(Round Robin)


[24번 문제] <DB>

문제 : 둘 이상의 트랜잭션 병행 실행되는 경우, 어느 하나의 트랜잭션 실행 중에 다른 트랜잭션의 연산이 끼어들 수 없음
답 : 트랜잭션의 독립성


[25번 문제] <애플리케이션 성능 측정 지표>

문제 : 응답 시간 (Response TIme)
답 : 요청 전달 부터 응답 도착 까지의 시간


[26번 문제] <OSI 참조 모델>

문제 : UDP
답 : 순서제어 X, 전송속도 빠름


[27번 문제] <디자인 패턴>

문제 : 객체의 상태에 따라 동일한 동작을 다르게 처리
답 : State


[28번 문제] <보안>

문제 : 시큐어코딩(Secure Coding)
답 : 보안요소를 고려하여 코딩, 보안정책을 바탕으로 가이드 작성


[29번 문제] <객체 지향>

문제 : 동적 모델링 (Dynamic)
답 : 상태 다이어그램 / 상태변화도

제어흐름, 상호작용, 동작순서 등 동적 행위를 표현


[30번 문제] <디자인 패턴>

문제 : 한 객체가 처리하지못하면 다음 객체로 넘어가는 형태
답 : Chain of Responsibility


[31번 문제] <디자인 패턴>

문제 : 동일한 계열의 알고리즘들을 개별적으로 캡슐화하여 상호 교환
클라이언트는 독립적으로 알고리즘 선택, 클라이언트에 영향 없이 알고리즘 변경 가능
답 : Strategy


[32번 문제] <OSI 참조 모델>

문제 : 두 응용프로그램 간의 프로세스 사이에서
데이터가 송수신 될 수 있도록
가상경로 수립/해제
답 : 세션 계층
(Session)


[33번 문제] <보안>

문제 : 인증(Authentication)
답 : 사용자 확인


[34번 문제] <보안>

문제 : 공개키 암호화 알고리즘, 큰 숫자 소인수분해하기 어렵다는 것에 기반
답 : RSA(Rivest Shamir Adelman)


[35번 문제] <디자인 패턴>

문제 : Template Method
답 : 상위 클래스에서 골격 정의, 하위 클래스에서 세부 처리 구체화


[36번 문제] <OSI 참조 모델>

문제 : Gateway
답 : OSI 전 계층의 프로토콜 구조가 다른 네트워크를 연결하는 장치
LAN에서 다른 네트워크에 데이터를 보내거나 다른 네트워크로부터 데이터를 받아들이는 출입구 역할


[37번 문제] <프로세스>

문제 : 빈 영역 중 단편화를 가장 작게 남기는 영역에 배치
답 : 최적 적합(Best Fit)


[38번 문제] <DB>

문제 : 트랙잭션이 부분 완료되기 전이라도 즉시 데이터베이스 반영
답 : 즉각 갱신 기법


[39번 문제] <프로세스>

문제 : 이미 할당된 CPU를 다른 프로세서가 강제로 뺏을 수 없음(일괄처리 방식에 적합)
답 : 비선점 스케줄링(Non-Preemptive)


[40번 문제] <디자인 패턴>

문제 : Builder
답 : 작게 분리된 인스턴스를 건축 하듯이 조합하여 객체 생성


[41번 문제] <보안>

문제 : 기밀성(Confidentiality)
답 : 인가된 사용자에게만 접근이 허용, 정보 전송 중 노출되어도 읽을 수 없음


[42번 문제] <소프트웨어 패키징>

문제 : CVS를 개선한 것으로 아파치 소프트웨어 재단에서 2000년에 발표

소스가 오픈되어 있어 무료로 사용할 수 있음

CVS의 단점이었던 파일이나 디렉터리의 이름 변경, 이동 등이 가능
답 : Subversion(SVN)


[43번 문제] <소프트웨어 패키징>

문제 : 기준선의 무결성을 평가하기 위해 확인, 검증, 검열 과정을 통해 공식적으로 승인하는 작업
답 : 형상 감사


[44번 문제] <객체 지향>

문제 : 의존관계 성립 시 추상성이 높은 클래스와 의존관계를 맺음
답 : DIP


[45번 문제] <보안솔루션>

문제 : 인증(Authentication)
답 : 로그인을 요청한 사용자의 정보를 확인, 접근 권한을 검증하는 절차


[46번 문제] <프로세스>

문제 : 프로그램이나 데이터를 언제 주기억장치로 적재할 것 인지를 결정하는 전략
답 : 반입 전략(Fetch)


[47번 문제] <OSI 참조 모델>

문제 : Router
답 : LAN과 LAN의 연결 기능에 데이터 전송의 최적경로를 선택하는 기능이 추가된 장치
서로 다른 LAN 또는 LAN과 WAN을 연결하는 기능


[48번 문제] <DB>

문제 : 시작(Start)은 있지만 완료(Commit)에 대한 기록은 없는 트랜잭션들이 작업한 변경 내용들 모두 취소
답 : Undo


[49번 문제] <프로세스>

문제 : 집중되는 페이지의 집합
답 : Working Set


[50번 문제] <자료흐름도>

문제 : 자료 저장소 (Data Store)
답 : 시스템에서의 자료 저장소 (파일, 데이터베이스)


[51번 문제] <모듈>

문제 : 기능적 응집도
(Functional Cohesion)
답 : 모듈 내부의 모든 기능 요소들이 단일 문제와 연관되어 수행


[52번 문제] <UML>

문제 : 시스템 개발 과정에서 의사소통이 원활하게 이루어지도록 표준화한 대표적인 객체지향 모델링 언어
답 : Unified Modeling Language


[53번 문제] <DB>

문제 : 데이터를 복구할 수 있는 기점
답 : RPO


[54번 문제] <프로세스>

문제 : 페이지 교체 알고리즘
답 : 페이지 부재(Page Fault)발생하면 어떤 페이지 프레임을 선택하여 교체할 것 인지를 결정하는 기법


[55번 문제] <네트워크>

문제 : EGP의 단점 보안, 초기엔 전체 경로 제어로 교환, 이후에는 변화된 정보만 교환
답 : BGP, Border Gateway Protocol


[56번 문제] <모듈>

문제 : 제어 결합도
(Control Coupling)
답 : 어떤 모듈이 다른 모듈 내부의 논리적인 흐름을 제어하기 위해 제어 신호나 제어 요소를 전달
하위 모듈에서 상위 모듈로 제어 신호가 이동하여 하위 모듈이 상위 모듈에게 처리 명령을 내리는 권리 전도 현상 발생


[57번 문제] <프로세스>

문제 : 하나의 페이지 일정시간 집중적 액세스
답 : Temporal Locality
(시간 구역성)


[58번 문제] <DB>

문제 : 트랜잭션의 지속성
답 : 성공적으로 완료된 트랜잭션의 결과는 시스템이 고장나도 영구 반영


[59번 문제] <프로세스>

문제 : PCB(Process Control Block)
답 : 운영체제가 프로세스에 대한 중요한 정보를 저장해놓는 곳


[60번 문제] <보안솔루션>

문제 : 데이터 유출 방지(DLP, Data Leakage/Loss Prevention)
답 : 내부 정보의 외부 유출 방지하는 보안솔루션

사내 직원이 사용하는 PC와 네트워크 상의 모든 정보를 검색, 사용자 행위 탐지, 통제, 외부로의 유출 사전 방지


[61번 문제] <프로세스>

문제 : Spatial Locality
(공간 구역성)
답 : 일정 위치의 페이지 집중 액세스


[62번 문제] <UI, UX>

문제 : GUI (Graphival User Interface)
답 : 아이콘이나 메뉴를 마우스로 선택하여 작업


[63번 문제] <애플리케이션 테스트>

문제 : 분기검증기준 Branch Coverage
답 : 모든 조건문에 대해 조건식의 결과가 True인 경우, False인 경우 한번 이상실행


[64번 문제] <UML>

문제 : 클래스 다이어그램
(Class Diagram)
답 : 클래스와 클래스가 갖는 속성, 클래스 사이의 관계 표현


[65번 문제] <UML>

문제 : 유스케이스나 클래스 등의 모델요소들을 그룹화한 패키지들의 관계 표현
답 : 패키지 다이어그램
(Package Diagram)


[66번 문제] <디자인 패턴>

문제 : Abstract Factory
답 : 인터페이스를 통해 서로 연관, 의존하는 객체들의 그룹으로 생성하여 추상적으로 표현


[67번 문제] <모듈>

문제 : 한 모듈이 다른 모듈의 내부 기능 및 그 내부 자료를 직접 참조하거나 수정할 때
답 : 내용 결합도
(Content Coupling)


[68번 문제] <보안솔루션>

문제 : 정보보호관리체계(ISMS, Information Security Management System)
답 : 정보자산을 안전하게 보호하기위한 보호절차와 대책, 한국인터넷진흥원(KISA)에서 운영


[69번 문제] <보안>

문제 : 주소가 저장되는 스택에서 발생하는 보안약점 막는 기술

메모리 상에서 프로그램의 복귀 주소와 변수 사이에 특정값을 저장, 그 값이 변경되었을 경우 오버플로우 상태로 판단, 프로그램 중단
답 : 스택가드(Stack Guard)


[70번 문제] <프로세스>

문제 : 프로세스(Process)
답 : 실행중인 프로그램을 의미, PCB를 가진 프로그램, 실 기억장치에 저장된, 프로세서가 할되는 실체, 디스패치 가능한 단위, 프로시저가 활동 중인 것, 비동기적 행위를 일으키는 주체, 운영체제가 관리하는 실행 단위


[71번 문제] <보안솔루션>

문제 : 조직 내부의 네트워크와 인터넷 간에 전송되는 정보를 선별하여 수용, 거부, 수정하는 침입차단 시스템

내부 네트워크에서 외부로 나가는 패킷은 그대로 통과, 외부에서 내부 네트워크로 들어오는 패킷은 내용을 엄밀히 체크하여 인증된 패킷만 통과
답 : 방화벽(Firewall)


[72번 문제] <OSI 참조 모델>

문제 : 물리 계층
(Physical)
답 : 통신 하드웨어 단말 간의 물리적인 접속을 연결, 제어 기능, 규칙을 정의


[73번 문제] <UML>

문제 : 상호작용하는 시스템이나 객체들이 주고받는 메시지를 표현
답 : 순차 다이어그램
(Sequence Diagram)


[74번 문제] <디자인 패턴>

문제 : Flyweight
답 : 인스턴스가 필요할 때 가능한 공유해서 사용함으로써 메모리를 절약하는 패턴
다수의 유사 객체를 생성하거나 조작할 때 유용


[75번 문제] <소프트웨어 개발 모형>

문제 : Pair Programming
(짝 프로그래밍)
Whole Team
(전체 팀)
Collective Ownership
(공동 코드 소유)
Continuous Integration
(계속적인 통합)
Test-Driven Development
(테스트 주도 개발)
Refactoring
(리팩토링)
Small Releases
(소규모 릴리즈)
답 : XP의 주요 실천방법


[76번 문제] <디자인 패턴>

문제 : Singleton
답 : 생성된 객체를 어디서든 참조할 수 있지만, 여러 프로세스가 동시에 참조할 수는 없음
클래스 내에서 인스턴스가 하나뿐임을 보장하며, 불필요한 메모리 낭비 최소화


[77번 문제] <보안>

문제 : MD4개선, 블록 길이 512비트, 키 길이 128비트, 암호화 해시

각 512비티 입력메시지 블록 처리 후 128비트 스테이트 값 변화
답 : MDS


[78번 문제] <애플리케이션 테스트>

문제 : 회귀 테스트 (Regression Test)
답 : 통합 테스트로 인해 변경된 모듈이나 컴포넌트에 새로운 오류가 있는지 확인하는 테스트

이미 테스트 된 프로그램의 테스팅을 반복


[79번 문제] <모듈>

문제 : 교환적 응집도
(Communication Cohesion)
답 : 동일한 입력과 출력을 사용하여 서로 다른 기능을 수행하는 구성 요소들이 모였을 경우


[80번 문제] <애플리케이션 테스트>

문제 : 1. 주요 제어 모듈은 작성된 프로그램 사용, 종속 모듈은 스텁(Stub)으로 대체
2. 깊이 우선 또는 넓이 우선 등의 통합 방식에 따라 하위 모듈인 스텁들이 한번에 하나씩 실제 모듈로 교체
3. 모듈이 통합될 때마다 테스트 실시
4. 새로운 오류 발생하지 않음을 보증하기 위해 회귀 테스트 실시
답 : 하향식 통합 테스트


[81번 문제] <프로세스>

문제 : 실행시간이 가장 짧은 프로세서에 먼저 CPU할당
답 : SJF(Shortest Job First)


[82번 문제] <공격 기법>

문제 : Session Hijacking
답 : 상호 인증과정을 거친 후 접속해 있는 서버와 클라이언트 사이의 세션정보를 가로채는 공격 기법


[83번 문제] <네트워크>

문제 : NAT, Network Address Translation
답 : 한 개의 정식 IP주소에 대량의 가상 사설IP주소를 할당 및 연결하는 기능

1개의 IP주소를 사용해서 외부에 접속할 수 있는 노드는 어느 시점에서 1개 만으로 제한되는 문제가 있으나 IP마스커레이드(Masquerade)를 이용, 해결


[84번 문제] <모듈>

문제 : 모듈 간의 인터페이스로 배열이나 레코드 등의 자료 구조가 전달
답 : 스탬프 결합도
(Stamp Coupling)


[85번 문제] <OSI 참조 모델>

문제 : 응용 계층
(Application)
답 : 응용프로그램이 통신망에 연동, 정보교환 시작


[86번 문제] <네트워크>

문제 : 데이터그램 방식(비연결형 통신)
답 : 각각의 패킷들을 순서에 상관없이 독립적으로 운반


[87번 문제] <프로세스>

문제 : OPT
(Optimal replacement)
답 : 앞으로 가장 오랫동안 사용하지 않을 페이지 교체
페이지 부재횟수가 가장 적게 발생하는 가장 효율적인 알고리즘, 벨레이디 제안


[88번 문제] <UML>

문제 : 상태 다이어그램
(State Diagram)
답 : 하나의 객체가 자신이 속한 클래스의 상태 변화 혹은 다른 객체와의 상호작용에 따라 상태가 어떻게 변화하는지를 표현
럼바우 객체지향 분석 기법에서 동적 모델링에 활용


[89번 문제] <소프트웨어 패키징>

문제 : 버전 관리 자료가 지역 컴퓨터의 공유 폴더에 저장되어 관리 되는 방식

파일의 변경 사항을 데이터베이스에 기록하여 관리

종류 : SCCS, RCS, PVCS, QVCS 등
답 : 공유 폴더 방식


[90번 문제] <디자인 패턴>

문제 : 한 객체의 상태가 변화하면 객체에 상속되어 있는 다른 객체들에게 변화된 상태를 전달하는 패턴
분산된 시스템 간에 이벤트를 생성, 발행하고 이를 수신해야할 때 이용
답 : Observer


[91번 문제] <모듈>

문제 : 특정 시간에 처리되는 몇 개의 기능을 모아 하나의 모듈로 작성할 경우
답 : 시간적 응집도
(Temporal Cohesion)


[92번 문제] <DB>

문제 : 타임스탬프 순서
답 : 시간표를 부여하여 부여된 시간에 따라 트랜잭션 작업을 수행


[93번 문제] <UML>

문제 : 타이밍 다이어그램
(Timing Diagram)
답 : 객체 상태 변화와 시간 제약을 명시적으로 표현


[94번 문제] <공격 기법>

문제 : 랜섬웨어(Ransomeware)
답 : 내부 문서나 파일등을 암호화해 사용자가 열지 못하게 하는 프로그램


[95번 문제] <DB>

문제 : 갱신 이상(Update Anomaly)
답 : 테이블에서 튜플에 있는 속성 값을 갱신할 때 일부 튜플의 정보만 갱신되어 정보에 불일치성(Inconsistency)이 생기는 현상


[96번 문제] <공격 기법>

문제 : 키로거 공격(Key Logger Attack)
답 : 컴퓨터 사용자의 키보드 움직임을 탐지해 정보를 몰래 빼가는 해킹공격


[97번 문제] <디자인 패턴>

문제 : 호환성이 없는 클래스들의 인터페이스를 다른 클래스가 이용할 수 있도록 변환
답 : Adapter


[98번 문제] <모듈>

문제 : 모듈 간의 인터페이스가 자료 요소로만 구성될 때
답 : 자료 결합도
(Data Coupling)


[99번 문제] <애플리케이션 테스트>

문제 : 동치분할검사 Equivalence Partitioning Testing
답 : 타당한 입력자료와 타당하지않은 입력자료의 개수를 균등하게 하여 맞는 결과가 출력되는지 확인


[100번 문제] <보안>

문제 : Secure OS
답 : 운영체제에 보안 기능을 갖춘 커널(Kernel)을 이식, 외부의 침입으로 부터 시스템 자원을 보호


