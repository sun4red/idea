[1번 문제] <네트워크>

문제 : 하나의 자율 시스템 내의 라우팅에 사용되는 프로토콜



[2번 문제] <디자인 패턴>

문제 : Decorator



[3번 문제] <보안>

문제 : SYN Flooding



[4번 문제] <디자인 패턴>

문제 : Prototype



[5번 문제] <공격 기법>

문제 : ARP Spoofing



[6번 문제] <프로세스>

문제 : 선점 스케줄링(Preemptive)



[7번 문제] <프로세스>

문제 : 시간 할당량 만큼만 실행한 후 완료되지 않으면 다음 프로세스에게 CPU를 넘겨줌
할당되는 시간이 클 경우 : FCFS 기법과 같아짐, 할당되는 시간이 작을 경우 : 문맥교환, 오버헤드가 많아지고 신속히 처리되지 않음



[8번 문제] <OSI 참조 모델>

문제 : Bridge



[9번 문제] <DB>

문제 : RBAC



[10번 문제] <보안>

문제 : Ping of Death



[11번 문제] <UML>

문제 : 클래스나 컴포넌트가 복합구조를 갖는 경우



[12번 문제] <UML>

문제 : 하나의 객체가 자신이 속한 클래스의 상태 변화 혹은 다른 객체와의 상호작용에 따라 상태가 어떻게 변화하는지를 표현
럼바우 객체지향 분석 기법에서 동적 모델링에 활용



[13번 문제] <OSI 참조 모델>

문제 : DNS



[14번 문제] <UML>

문제 : 할 수 있거나 해야 하는 기능. 서로를 그룹화 할 수 있는 관계



[15번 문제] <OSI 참조 모델>

문제 : 응용프로그램이 통신망에 연동, 정보교환 시작



[16번 문제] <RAID>

문제 : 스트라이핑(Striping)

디스크를 병렬로 연결하여 디스크의 개수만틈 용량과 속도가 배로 증가

하나의 디스크만 손상되어도 전체 데이터가 파손



[17번 문제] <DB>

문제 : 삭제 이상(Deletion Anomaly)



[18번 문제] <모듈>

문제 : 순차적 응집도
(Sequential Cohesion)



[19번 문제] <소프트웨어 패키징>

문제 : SCM, Software Configuration Management



[20번 문제] <OSI 참조 모델>

문제 : 데이터링크 계층
(Data Link)



[21번 문제] <공격 기법>

문제 : 내부 문서나 파일등을 암호화해 사용자가 열지 못하게 하는 프로그램



[22번 문제] <모듈>

문제 : 한 모듈이 다른 모듈의 내부 기능 및 그 내부 자료를 직접 참조하거나 수정할 때



[23번 문제] <보안>

문제 : N-NASH



[24번 문제] <DB>

문제 : 트랜잭션의 지속성



[25번 문제] <네트워크>

문제 : 정지-대기(Stop and Wait)



[26번 문제] <UI, UX>

문제 : NUI (Natural User Interface)



[27번 문제] <디자인 패턴>

문제 : Command



[28번 문제] <소프트웨어 패키징>

문제 : 모듈별로 생성한 실행 파일을 묶어 배포용 설치 파일을 만드는 것

개발자가 아니라 사용자 중심으로 진행

소스 코드는 향후 관리를 고려하여 모듈화하여 패키징



[29번 문제] <모듈>

문제 : 우연적 응집도
(Coinfidental Cohesion)



[30번 문제] <디자인 패턴>

문제 : 작게 분리된 인스턴스를 건축 하듯이 조합하여 객체 생성



[31번 문제] <소프트웨어 개발 모형>

문제 : XP의 주요 실천방법



[32번 문제] <공격 기법>

문제 : 상호 인증과정을 거친 후 접속해 있는 서버와 클라이언트 사이의 세션정보를 가로채는 공격 기법



[33번 문제] <UML>

문제 : 사용자의 요구를 분석하는 것으로, 기능 모델링 작업에 사용
사용자(Actor)와 사용 사례(Use Case)로 구성



[34번 문제] <보안솔루션>

문제 : 정보자산을 안전하게 보호하기위한 보호절차와 대책, 한국인터넷진흥원(KISA)에서 운영



[35번 문제] <프로세스>

문제 : 시스템의 여러자원을 할당받아 실행하는 프로그램의 단위

프로세스의 일부 특성을 가져 경량프로세스라고도 함



[36번 문제] <보안>

문제 : 웹 응용프로그램에 SQL을 삽입하여 내부 DB서버의 데이터를 유출, 변조, 관리자 인증 우회

동적쿼리에 사용되는 입력 데이터에 예약어 및 특수문자가 입력되지않도록 설정하여 방지



[37번 문제] <공격 기법>

문제 : 주소를 잘못입력하는 실수를 이용, 유사한 도메인을 미리 등록(URL하이재킹)



[38번 문제] <애플리케이션 성능 측정 지표>

문제 : 요청 전달 부터 응답 도착 까지의 시간



[39번 문제] <소프트웨어 패키징>

문제 : 형상 기록



[40번 문제] <디자인 패턴>

문제 : 서브 클래스들 사이의 통합 인터페이스를 제공하는 Wrapper 객체가 필요
복잡한 서브클래스들을 피해 더 상위에 인터페이스를 구성, 서브클래스들의 기능을 간편하게 사용할 수 있도록 하는 패턴



[41번 문제] <보안>

문제 : HTTPS(HyperText Transfer Protocol Secure)



[42번 문제] <보안>

문제 : 분산된 공격 지점에서 한 곳의 서버에 대해 서비스 거부 공격

취약점이 있는 호스트들을 탐색 후 서비스 공격용 툴(Demon)을 설치, 에이전트로 만든 후 DDoS공격에 이용



[43번 문제] <디자인 패턴>

문제 : Interpreter



[44번 문제] <공격 기법>

문제 : 네트워크의 중간에서 남의 패킷 정보를 도청



[45번 문제] <애플리케이션 테스트>

문제 : 통합 테스트로 인해 변경된 모듈이나 컴포넌트에 새로운 오류가 있는지 확인하는 테스트

이미 테스트 된 프로그램의 테스팅을 반복



[46번 문제] <디자인 패턴>

문제 : Flyweight



[47번 문제] <보안>

문제 : RSA(Rivest Shamir Adelman)



[48번 문제] <DB>

문제 : NAS



[49번 문제] <프로세스>

문제 : 프로그램이나 데이터를 어디에 위치 시킬 것 인지를 결정하는 전략



[50번 문제] <프로세스>

문제 : 가상기억장치(Virtual Memory)



[51번 문제] <UML>

문제 : 배치 다이어그램
(Deployment Diagram)



[52번 문제] <보안솔루션>

문제 : 웹 방화벽(Web Firewall)



[53번 문제] <보안>

문제 : IP나 ICMP 특성 악용하여 엄청난 양의 데이터를 한 사이트에 집중적으로 보냄으로 써 네트워크를 불능 상태로 만드는 공격 무력화 방법 : 네트워크 라우터에서 브로드캐스트주소를 사용할 수 없게 미리 설정



[54번 문제] <보안>

문제 : DES(Data Encryption Standard)



[55번 문제] <디자인 패턴>

문제 : 인터페이스를 통해 서로 연관, 의존하는 객체들의 그룹으로 생성하여 추상적으로 표현



[56번 문제] <애플리케이션 테스트>

문제 : 화이트박스 테스트



[57번 문제] <네트워크>

문제 : 수신 통지 이용, 미리 정해징 패킷 수 연속 전송

약속된 최대 패킷 수 : Window Size)



[58번 문제] <보안>

문제 : MD4개선, 블록 길이 512비트, 키 길이 128비트, 암호화 해시

각 512비티 입력메시지 블록 처리 후 128비트 스테이트 값 변화



[59번 문제] <네트워크>

문제 : 가상 회선 방식(연결형 통신)



[60번 문제] <공격 기법>

문제 : 웹사이트를 사전에 감염시켜 해당 사이트에 방문했을 때 악성코드에 감염되게 하는 웹 기반 공격

감염된 PC를 기반으로 대상이 속한 시스템 접근



[61번 문제] <RAID>

문제 : RAID 6



[62번 문제] <객체 지향>

문제 : 자료흐름도

다수 프로세스 간의 자료흐름을 중심으로 처리과정 표현



[63번 문제] <프로세스>

문제 : 프로그램을 일정한 크기로 나눈 단위



[64번 문제] <보안>

문제 : Secure OS



[65번 문제] <디자인 패턴>

문제 : Mediator



[66번 문제] <소프트웨어 패키징>

문제 : 클라이언트/서버 방식



[67번 문제] <보안>

문제 : TKIP(Temporal Key Integrity Protocol)



[68번 문제] <객체 지향>

문제 : 의존관계 성립 시 추상성이 높은 클래스와 의존관계를 맺음



[69번 문제] <보안>

문제 : 국가안전보장국(NSA)에서 개발한 암호화 알고리즘, 클리퍼칩(IC칩)에 내장, 블록크리 64비트, 키 길이 80비트 주로 음성통신장비에 삽입, 음성데이터 암호화



[70번 문제] <보안솔루션>

문제 : 방화벽(Firewall)



[71번 문제] <DB>

문제 : 테이블에서 튜플에 있는 속성 값을 갱신할 때 일부 튜플의 정보만 갱신되어 정보에 불일치성(Inconsistency)이 생기는 현상



[72번 문제] <애플리케이션 테스트>

문제 : 소스코드 모든 구문 한번 이상 수행



[73번 문제] <객체 지향>

문제 : 시스템에서 요구되는객체

속성과 연산 식별 및 객체들 간의 관계 규정, 객체 다이어그램으로 표시



[74번 문제] <UML>

문제 : 상호작용 개요 다이어그램
(Interaction Overview Diagram)



[75번 문제] <모듈>

문제 : 모듈 내부의 모든 기능 요소들이 단일 문제와 연관되어 수행



[76번 문제] <네트워크>

문제 : NAT, Network Address Translation



[77번 문제] <자료흐름도>

문제 : 요구사항 분석에서 자료의 흐름 및 변환 과정과 기능을 도형 중심으로 기술하는 방법

자료흐름과 처리를 중심으로 하는 구조적 분석기법에 이용(자료흐름 그래픔, 버블차트)



[78번 문제] <공격 기법>

문제 : 백도어(Back Door, Trap Door)



[79번 문제] <DB>

문제 : 트랙잭션이 부분 완료되기 전이라도 즉시 데이터베이스 반영



[80번 문제] <네트워크>

문제 : 프로토콜



[81번 문제] <모듈>

문제 : 모듈 간의 인터페이스로 배열이나 레코드 등의 자료 구조가 전달



[82번 문제] <프로세스>

문제 : 단편화를 가장 많이 남기는 영역에 배치



[83번 문제] <UML>

문제 : 구현 단계에서 사용, 실제 구현 모델인 컴포넌트 간의 관계나 인터페이스 표현



[84번 문제] <OSI 참조 모델>

문제 : ARP



[85번 문제] <프로세스>

문제 : 비선점 스케줄링(Non-Preemptive)



[86번 문제] <OSI 참조 모델>

문제 : 물리 계층
(Physical)



[87번 문제] <모듈>

문제 : 어떤 모듈이 다른 모듈 내부의 논리적인 흐름을 제어하기 위해 제어 신호나 제어 요소를 전달
하위 모듈에서 상위 모듈로 제어 신호가 이동하여 하위 모듈이 상위 모듈에게 처리 명령을 내리는 권리 전도 현상 발생



[88번 문제] <보안>

문제 : 기밀성(Confidentiality)



[89번 문제] <객체 지향>

문제 : 캡슐화

세부내용 은닉

결합도 ▼, 재사용성 ▲, 단순화

상속

상위클래스의 모든 속성과 연산을 하위클래스가 물려받음

다형성

하나의 메시지에 대해 각각의 객체가 고유한 방법으로 응답

연관성



[90번 문제] <보안>

문제 : 미국표준기술연구소(NIST)에서 발표한 개인키 알고리즘, 블록크기 128비트, 길이에 따라 분류



[91번 문제] <프로세스>

문제 : 프로그램을 배열이나 함수 등과 같은 논리적인 크기로 나눈 단위



[92번 문제] <프로세스>

문제 : 운영체제가 프로세스에 대한 중요한 정보를 저장해놓는 곳



[93번 문제] <디자인 패턴>

문제 : 객체 생성을 서브클래스에서 처리하도록 분리하여 캡슐화
상위 클래스에서 인터페이스만 정의, 실제 생성은 서브 클래스가 담당



[94번 문제] <UML>

문제 : 순차 다이어그램
(Sequence Diagram)



[95번 문제] <UML>

문제 : 타이밍 다이어그램
(Timing Diagram)



[96번 문제] <소프트웨어 패키징>

문제 : 버전 관리 자료가 지역 컴퓨터의 공유 폴더에 저장되어 관리 되는 방식

파일의 변경 사항을 데이터베이스에 기록하여 관리

종류 : SCCS, RCS, PVCS, QVCS 등



[97번 문제] <프로세스>

문제 : 요구 반입(Demand Fetch)



[98번 문제] <디자인 패턴>

문제 : Composite



[99번 문제] <요구사항>

문제 : HIPO (Hierarchy Input Process Output)



[100번 문제] <보안솔루션>

문제 : 네트워크에 접속하는 내부 PC의 MAC주소를 IP관리시스템에 등록 후 일관된 보안관리 기능 제공 보안솔루션, 내부 PC의 SW사용현황 관리, 불법 SW설치 방지



