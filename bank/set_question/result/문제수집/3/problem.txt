[1번 문제] <프로세스>

문제 : Temporal Locality
(시간 구역성)



[2번 문제] <프로세스>

문제 : 실행중인 프로그램을 의미, PCB를 가진 프로그램, 실 기억장치에 저장된, 프로세서가 할되는 실체, 디스패치 가능한 단위, 프로시저가 활동 중인 것, 비동기적 행위를 일으키는 주체, 운영체제가 관리하는 실행 단위



[3번 문제] <애플리케이션 테스트>

문제 : 화이트박스 테스트



[4번 문제] <객체 지향>

문제 : OCP



[5번 문제] <DB>

문제 : 트랜잭션의 일관성



[6번 문제] <네트워크>

문제 : EGP의 단점 보안, 초기엔 전체 경로 제어로 교환, 이후에는 변화된 정보만 교환



[7번 문제] <프로세스>

문제 : 예상 반입(Anticipatory Fetch)



[8번 문제] <보안솔루션>

문제 : 내부 정보의 외부 유출 방지하는 보안솔루션

사내 직원이 사용하는 PC와 네트워크 상의 모든 정보를 검색, 사용자 행위 탐지, 통제, 외부로의 유출 사전 방지



[9번 문제] <프로세스>

문제 : 비선점 스케줄링(Non-Preemptive)



[10번 문제] <UI, UX>

문제 : 명령과 출력이 텍스트 형태



[11번 문제] <애플리케이션 테스트>

문제 : 소스코드 모든 구문 한번 이상 수행



[12번 문제] <네트워크>

문제 : 흐름제어(Flow Control)



[13번 문제] <애플리케이션 테스트>

문제 : 1. 하위 모듈들을 클러스터(Cluster)로 결합
2. 상위 모듈에서 데이터 입, 출력을 확인하기 위해 더미 모듈인  드라이버(Driver)작성
3. 통합된 클러스터 단위로 테스트
4. 테스트가 완료되면 클러스터는 프로그램 구조의 상위로 이동하여 결합하고 드라이버는 실제 모듈로 대체



[14번 문제] <보안>

문제 : SNEFRU



[15번 문제] <디자인 패턴>

문제 : 객체의 상태에 따라 동일한 동작을 다르게 처리



[16번 문제] <소프트웨어 개발 모형>

문제 : SCRUM



[17번 문제] <객체 지향>

문제 : 자료흐름도

다수 프로세스 간의 자료흐름을 중심으로 처리과정 표현



[18번 문제] <UI, UX>

문제 : UseCase



[19번 문제] <소프트웨어 개발 모형>

문제 : Pair Programming
(짝 프로그래밍)
Whole Team
(전체 팀)
Collective Ownership
(공동 코드 소유)
Continuous Integration
(계속적인 통합)
Test-Driven Development
(테스트 주도 개발)
Refactoring
(리팩토링)
Small Releases
(소규모 릴리즈)



[20번 문제] <OSI 참조 모델>

문제 : 전송 계층
(Transport)



[21번 문제] <네트워크>

문제 : NAT, Network Address Translation



[22번 문제] <소프트웨어 패키징>

문제 : 형상 통제



[23번 문제] <보안솔루션>

문제 : 로그인을 요청한 사용자의 정보를 확인, 접근 권한을 검증하는 절차



[24번 문제] <자료흐름도>

문제 : 자료흐름 (Data Flow)



[25번 문제] <객체 지향>

문제 : LSP



[26번 문제] <프로세스>

문제 : 빈 영역 중 단편화를 가장 작게 남기는 영역에 배치



[27번 문제] <객체 지향>

문제 : DIP



[28번 문제] <객체 지향>

문제 : 자신이 사용하지 않는 인터페이스와 의존관계를 맺거나 영향을 받지 않아야 한다



[29번 문제] <보안>

문제 : 입력된 데이터나 메시지를 고정된 길이의 키로 변환하는 것

미국 국립표준기술연구소(NIST)에서 SHA시리즈 발표



[30번 문제] <애플리케이션 테스트>

문제 : 각 기능이 완전히 작동되는 것을 입증

사용자의 요구사항 명세를 보면서 테스트

구현된 기능 테스트

소프트웨어 인터페이스로 실시



[31번 문제] <OSI 참조 모델>

문제 : PPTP + L2F 기술적 장점 결합한 터널링 프로토콜

자체적으로 암호화 및 인증 기능을 제공하지 않아 다른 보안 프로토콜과 함께 사용되는 경우가 많음



[32번 문제] <보안>

문제 : 시큐어코딩(Secure Coding)



[33번 문제] <UML>

문제 : 유스케이스 다이어그램
(Use Case Diagram)



[34번 문제] <소프트웨어 패키징>

문제 : 기준선의 무결성을 평가하기 위해 확인, 검증, 검열 과정을 통해 공식적으로 승인하는 작업



[35번 문제] <네트워크>

문제 : 경로제어(Routing)



[36번 문제] <UML>

문제 : 상호작용하는 시스템이나 객체들이 주고받는 메시지를 표현



[37번 문제] <디자인 패턴>

문제 : Interpreter



[38번 문제] <객체 지향>

문제 : SRP



[39번 문제] <애플리케이션 테스트>

문제 : 통합 테스트로 인해 변경된 모듈이나 컴포넌트에 새로운 오류가 있는지 확인하는 테스트

이미 테스트 된 프로그램의 테스팅을 반복



[40번 문제] <소프트웨어 패키징>

문제 : 형상 식별



[41번 문제] <DB>

문제 : 테이블에서 튜플에 있는 속성 값을 갱신할 때 일부 튜플의 정보만 갱신되어 정보에 불일치성(Inconsistency)이 생기는 현상



[42번 문제] <보안솔루션>

문제 : SSH(Secure Shell)



[43번 문제] <OSI 참조 모델>

문제 : 데이터링크 계층
(Data Link)



[44번 문제] <애플리케이션 테스트>

문제 : 과거의 경험이나 확인자의 감각으로 테스트



[45번 문제] <소프트웨어 패키징>

문제 : 리누스 토발즈가 리눅스 커널 개발에 사용할 관리 도구로 개발한 이후 주니오 하마노에 의해 유지보수

분산 버전 관리 시스템으로 2개의 저장소(지역 저장소와 원격저장소) 존재

버전 관리가 지역 저장소에서 진행되므로 버전 관리가 신속하게 처리되고, 원격 저장소나 네트워크에 문제가 있어도 작업이 가능하다.



[46번 문제] <보안>

문제 : 사용자 확인



[47번 문제] <요구사항>

문제 : 시스템정의, 소프트웨어 요구사항 분석, 시스템/소프트웨어 설계도구

SoftTech사 개발



[48번 문제] <UML>

문제 : Unified Modeling Language



[49번 문제] <디자인 패턴>

문제 : Factory Method



[50번 문제] <UML>

문제 : 동작에 참여하는 객체들이 주고받는 메시지와 객체들 간의 연관 관계를 표현



[51번 문제] <DB>

문제 : 시스템 자신이 필요로 하는 스키마 및 여러가지 객체에 관한 정보를 포함하고 있는 시스템 데이터 베이스 DBMS가 스스로 생성하고 유



[52번 문제] <애플리케이션 테스트>

문제 : 경계값 분석 Boundary Value Analysis



[53번 문제] <OSI 참조 모델>

문제 : 호스트의 IP 주소를 호스트와 연결된 네트워크 접속장치의 물리적 주소(MAC Address)로 변환



[54번 문제] <UI, UX>

문제 : Mockup



[55번 문제] <공격 기법>

문제 : 백도어(Back Door, Trap Door)



[56번 문제] <RAID>

문제 : 미러링(Mirroring)

같은 데이터를 다른 디스크에 동일하게 복사하는 방식



[57번 문제] <프로세스>

문제 : 페이징 기법(Paging)



[58번 문제] <애플리케이션 성능 측정 지표>

문제 : 경과 시간 (Turn Around Time)



[59번 문제] <프로세스>

문제 : 프로그램이나 데이터를 언제 주기억장치로 적재할 것 인지를 결정하는 전략



[60번 문제] <보안>

문제 : 메모리 버퍼 오버플로



[61번 문제] <보안>

문제 : 인가된 사용자는 정보와 자원을 언제라도 사용할 수 있다.



[62번 문제] <공격 기법>

문제 : 웹사이트를 사전에 감염시켜 해당 사이트에 방문했을 때 악성코드에 감염되게 하는 웹 기반 공격

감염된 PC를 기반으로 대상이 속한 시스템 접근



[63번 문제] <보안>

문제 : 국가안전보장국(NSA)에서 개발한 암호화 알고리즘, 클리퍼칩(IC칩)에 내장, 블록크리 64비트, 키 길이 80비트 주로 음성통신장비에 삽입, 음성데이터 암호화



[64번 문제] <모듈>

문제 : 특정 시간에 처리되는 몇 개의 기능을 모아 하나의 모듈로 작성할 경우



[65번 문제] <UML>

문제 : 하나의 사물이 다른 사물에 포함돼 있는 관계



[66번 문제] <DB>

문제 : 둘 이상의 트랜잭션 병행 실행되는 경우, 어느 하나의 트랜잭션 실행 중에 다른 트랜잭션의 연산이 끼어들 수 없음



[67번 문제] <RAID>

문제 : RAID 2~4



[68번 문제] <DB>

문제 : 데이터를 복구할 수 있는 기점



[69번 문제] <디자인 패턴>

문제 : Template Method



[70번 문제] <네트워크>

문제 : 국가/대륙 간 사이트 연결

거리가 멀어 통신속도가 느리고 에러발생률이 높음



[71번 문제] <보안솔루션>

문제 : 웹 기반 공격(SQL삽입공격, XSS) 방어할 목적



[72번 문제] <보안>

문제 : SSL(Secure Socket Layer)



[73번 문제] <DB>

문제 : RBAC



[74번 문제] <객체 지향>

문제 : 상태 다이어그램 / 상태변화도

제어흐름, 상호작용, 동작순서 등 동적 행위를 표현



[75번 문제] <디자인 패턴>

문제 : 복잡한 상호작용을 캡슐화하여 객체로 정의
객체 사이의 의존성을 줄여 결합도를 감소



[76번 문제] <보안>

문제 : RSA(Rivest Shamir Adelman)



[77번 문제] <디자인 패턴>

문제 : Iterator



[78번 문제] <자료흐름도>

문제 : 자료를 변환시키는 시스템의 한부분을 나타냄
처리, 기능, 변환, 버블이라고도 함



[79번 문제] <RAID>

문제 : RAID 6



[80번 문제] <네트워크>

문제 : 각각의 패킷들을 순서에 상관없이 독립적으로 운반



[81번 문제] <DB>

문제 : 데이터베이스 비정상 종료 시 트랙잭션의 시작(Start)과 완료(Commit)에 대한 기록이 있는 작업을 재작업



[82번 문제] <소프트웨어 패키징>

문제 : 클라이언트/서버 방식



[83번 문제] <보안솔루션>

문제 : 침입방지시스템(IPS, Intrusion Prevention System)



[84번 문제] <애플리케이션 테스트>

문제 : 하향식 통합 테스트



[85번 문제] <모듈>

문제 : 우연적 응집도
(Coinfidental Cohesion)



[86번 문제] <보안>

문제 : 인가된 사용자에게만 접근이 허용, 정보 전송 중 노출되어도 읽을 수 없음



[87번 문제] <모듈>

문제 : 제어 결합도
(Control Coupling)



[88번 문제] <애플리케이션 테스트>

문제 : 제어구조 검사



[89번 문제] <보안>

문제 : 인가된 사용자만 수정할 수 있다



[90번 문제] <UI, UX>

문제 : Prototype



[91번 문제] <DB>

문제 : 주체와 객체의 등급을 비교



[92번 문제] <애플리케이션 테스트>

문제 : 원인-효과 그래프 검사 Cause-Effect Graphing Testing



[93번 문제] <프로세스>

문제 : PCB(Process Control Block)



[94번 문제] <OSI 참조 모델>

문제 : 세션 계층
(Session)



[95번 문제] <프로세스>

문제 : LRU
(Least Recently Used)



[96번 문제] <프로세스>

문제 : 일정 위치의 페이지 집중 액세스



[97번 문제] <프로세스>

문제 : FCFS(First Come First Service)



[98번 문제] <프로세스>

문제 : PageFrame



[99번 문제] <프로세스>

문제 : 집중되는 페이지의 집합



[100번 문제] <소프트웨어 개발 모형>

문제 : 애자일 (Agile)



