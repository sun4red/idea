[1번 문제] <프로세스>

문제 : Temporal Locality
(시간 구역성)
답 : 하나의 페이지 일정시간 집중적 액세스


[2번 문제] <프로세스>

문제 : 실행중인 프로그램을 의미, PCB를 가진 프로그램, 실 기억장치에 저장된, 프로세서가 할되는 실체, 디스패치 가능한 단위, 프로시저가 활동 중인 것, 비동기적 행위를 일으키는 주체, 운영체제가 관리하는 실행 단위
답 : 프로세스(Process)


[3번 문제] <애플리케이션 테스트>

문제 : 화이트박스 테스트
답 : 원시코드의 논리적인 모든 경로 테스트

모든 문장 한번 이상 실행


[4번 문제] <객체 지향>

문제 : OCP
답 : 기존 코드 변경없이 기능 추가 가능


[5번 문제] <DB>

문제 : 트랜잭션의 일관성
답 : 트랜잭션이 실행을 성공적으로 완료하면 언제나 일관성 있는 데이터베이스 상태로 변환


[6번 문제] <네트워크>

문제 : EGP의 단점 보안, 초기엔 전체 경로 제어로 교환, 이후에는 변화된 정보만 교환
답 : BGP, Border Gateway Protocol


[7번 문제] <프로세스>

문제 : 예상 반입(Anticipatory Fetch)
답 : 실행 중인 프로그램에 의해 참조될 프로그램이나 데이터를 미리 예상하여 적재하는 방법


[8번 문제] <보안솔루션>

문제 : 내부 정보의 외부 유출 방지하는 보안솔루션

사내 직원이 사용하는 PC와 네트워크 상의 모든 정보를 검색, 사용자 행위 탐지, 통제, 외부로의 유출 사전 방지
답 : 데이터 유출 방지(DLP, Data Leakage/Loss Prevention)


[9번 문제] <프로세스>

문제 : 비선점 스케줄링(Non-Preemptive)
답 : 이미 할당된 CPU를 다른 프로세서가 강제로 뺏을 수 없음(일괄처리 방식에 적합)


[10번 문제] <UI, UX>

문제 : 명령과 출력이 텍스트 형태
답 : CLI (Command Line Interface)


[11번 문제] <애플리케이션 테스트>

문제 : 소스코드 모든 구문 한번 이상 수행
답 : 문장검증기준 Statement Coverage


[12번 문제] <네트워크>

문제 : 흐름제어(Flow Control)
답 : 송 수신 측 사이에 전송되는 패킷 양이나 속도 규제


[13번 문제] <애플리케이션 테스트>

문제 : 1. 하위 모듈들을 클러스터(Cluster)로 결합
2. 상위 모듈에서 데이터 입, 출력을 확인하기 위해 더미 모듈인  드라이버(Driver)작성
3. 통합된 클러스터 단위로 테스트
4. 테스트가 완료되면 클러스터는 프로그램 구조의 상위로 이동하여 결합하고 드라이버는 실제 모듈로 대체
답 : 상향식 통합 테스트


[14번 문제] <보안>

문제 : SNEFRU
답 : R.C.Merkle 해시함수, 32비트 프로세서에서 구현용이, 128비트 및 256비트 출력지원, 이집트 파라오 이름 땀


[15번 문제] <디자인 패턴>

문제 : 객체의 상태에 따라 동일한 동작을 다르게 처리
답 : State


[16번 문제] <소프트웨어 개발 모형>

문제 : SCRUM
답 : 실제 결과물이 나오는 반복 주기를 가지며, 많은 회의


[17번 문제] <객체 지향>

문제 : 자료흐름도

다수 프로세스 간의 자료흐름을 중심으로 처리과정 표현
답 : 기능 모델링 (Function)


[18번 문제] <UI, UX>

문제 : UseCase
답 : 사용자의 요구사항을 기능 단위로 표현

일반적으로 다이어그램 형식


[19번 문제] <소프트웨어 개발 모형>

문제 : Pair Programming
(짝 프로그래밍)
Whole Team
(전체 팀)
Collective Ownership
(공동 코드 소유)
Continuous Integration
(계속적인 통합)
Test-Driven Development
(테스트 주도 개발)
Refactoring
(리팩토링)
Small Releases
(소규모 릴리즈)
답 : XP의 주요 실천방법


[20번 문제] <OSI 참조 모델>

문제 : 전송 계층
(Transport)
답 : 오류제어, 흐름제어, 혼잡제어

호스트들 간의 신뢰성 있는 통신 제공


[21번 문제] <네트워크>

문제 : NAT, Network Address Translation
답 : 한 개의 정식 IP주소에 대량의 가상 사설IP주소를 할당 및 연결하는 기능

1개의 IP주소를 사용해서 외부에 접속할 수 있는 노드는 어느 시점에서 1개 만으로 제한되는 문제가 있으나 IP마스커레이드(Masquerade)를 이용, 해결


[22번 문제] <소프트웨어 패키징>

문제 : 형상 통제
답 : 식별된 형상 항목에 대한 변경 요구를 검토하여 현재의 기준선(Base Line)이 잘 반영될 수 있도록 조정하는 작업


[23번 문제] <보안솔루션>

문제 : 로그인을 요청한 사용자의 정보를 확인, 접근 권한을 검증하는 절차
답 : 인증(Authentication)


[24번 문제] <자료흐름도>

문제 : 자료흐름 (Data Flow)
답 : 자료의 이동이나 연관관계


[25번 문제] <객체 지향>

문제 : LSP
답 : 자식클래스는 최소한 부모클래스의 기능을 수행할 수 있어야 한다


[26번 문제] <프로세스>

문제 : 빈 영역 중 단편화를 가장 작게 남기는 영역에 배치
답 : 최적 적합(Best Fit)


[27번 문제] <객체 지향>

문제 : DIP
답 : 의존관계 성립 시 추상성이 높은 클래스와 의존관계를 맺음


[28번 문제] <객체 지향>

문제 : 자신이 사용하지 않는 인터페이스와 의존관계를 맺거나 영향을 받지 않아야 한다
답 : ISP


[29번 문제] <보안>

문제 : 입력된 데이터나 메시지를 고정된 길이의 키로 변환하는 것

미국 국립표준기술연구소(NIST)에서 SHA시리즈 발표
답 : HASH


[30번 문제] <애플리케이션 테스트>

문제 : 각 기능이 완전히 작동되는 것을 입증

사용자의 요구사항 명세를 보면서 테스트

구현된 기능 테스트

소프트웨어 인터페이스로 실시
답 : 블랙박스 테스트


[31번 문제] <OSI 참조 모델>

문제 : PPTP + L2F 기술적 장점 결합한 터널링 프로토콜

자체적으로 암호화 및 인증 기능을 제공하지 않아 다른 보안 프로토콜과 함께 사용되는 경우가 많음
답 : L2TP


[32번 문제] <보안>

문제 : 시큐어코딩(Secure Coding)
답 : 보안요소를 고려하여 코딩, 보안정책을 바탕으로 가이드 작성


[33번 문제] <UML>

문제 : 유스케이스 다이어그램
(Use Case Diagram)
답 : 사용자의 요구를 분석하는 것으로, 기능 모델링 작업에 사용
사용자(Actor)와 사용 사례(Use Case)로 구성


[34번 문제] <소프트웨어 패키징>

문제 : 기준선의 무결성을 평가하기 위해 확인, 검증, 검열 과정을 통해 공식적으로 승인하는 작업
답 : 형상 감사


[35번 문제] <네트워크>

문제 : 경로제어(Routing)
답 : 전송 경로 중에서 최적 패킷 교환경로 결정 기능

경로 제어표를 참조, [라우터]에 의해 실행


[36번 문제] <UML>

문제 : 상호작용하는 시스템이나 객체들이 주고받는 메시지를 표현
답 : 순차 다이어그램
(Sequence Diagram)


[37번 문제] <디자인 패턴>

문제 : Interpreter
답 : 언어에 문법 표현을 정의


[38번 문제] <객체 지향>

문제 : SRP
답 : 객체는 단 하나의 책임만


[39번 문제] <애플리케이션 테스트>

문제 : 통합 테스트로 인해 변경된 모듈이나 컴포넌트에 새로운 오류가 있는지 확인하는 테스트

이미 테스트 된 프로그램의 테스팅을 반복
답 : 회귀 테스트 (Regression Test)


[40번 문제] <소프트웨어 패키징>

문제 : 형상 식별
답 : 형상 관리 대상에 이름과 관리 번호를 부여하고, 계층(Tree)구조로 구분하여 수정 및 추적이 용이하도록 하는 작업


[41번 문제] <DB>

문제 : 테이블에서 튜플에 있는 속성 값을 갱신할 때 일부 튜플의 정보만 갱신되어 정보에 불일치성(Inconsistency)이 생기는 현상
답 : 갱신 이상(Update Anomaly)


[42번 문제] <보안솔루션>

문제 : SSH(Secure Shell)
답 : 다른 컴퓨터에 원격으로 접속하여 작업을 수행할 수 있도록 다양한 기능을 지원하는 프로토콜 응용프로그램, 주로 22번 포트를 사용

데이터 암호화, 강력한 인증방법으로 보안성이 낮은 네트워크에서도 안전하게 통신 가능

key를 통한 인증방법 사용 시 사전에 클라이언트의 공개키를 서버에 등록


[43번 문제] <OSI 참조 모델>

문제 : 데이터링크 계층
(Data Link)
답 : 물리 계층의 통신매체를 통해 발생하는 데이터 블록의 송수신 간의 에러에 대한 검출 및 제어 관리


[44번 문제] <애플리케이션 테스트>

문제 : 과거의 경험이나 확인자의 감각으로 테스트
답 : 오류 예측 검사 Error Guessing


[45번 문제] <소프트웨어 패키징>

문제 : 리누스 토발즈가 리눅스 커널 개발에 사용할 관리 도구로 개발한 이후 주니오 하마노에 의해 유지보수

분산 버전 관리 시스템으로 2개의 저장소(지역 저장소와 원격저장소) 존재

버전 관리가 지역 저장소에서 진행되므로 버전 관리가 신속하게 처리되고, 원격 저장소나 네트워크에 문제가 있어도 작업이 가능하다.
답 : Git


[46번 문제] <보안>

문제 : 사용자 확인
답 : 인증(Authentication)


[47번 문제] <요구사항>

문제 : 시스템정의, 소프트웨어 요구사항 분석, 시스템/소프트웨어 설계도구

SoftTech사 개발
답 : SADT


[48번 문제] <UML>

문제 : Unified Modeling Language
답 : 시스템 개발 과정에서 의사소통이 원활하게 이루어지도록 표준화한 대표적인 객체지향 모델링 언어


[49번 문제] <디자인 패턴>

문제 : Factory Method
답 : 객체 생성을 서브클래스에서 처리하도록 분리하여 캡슐화
상위 클래스에서 인터페이스만 정의, 실제 생성은 서브 클래스가 담당


[50번 문제] <UML>

문제 : 동작에 참여하는 객체들이 주고받는 메시지와 객체들 간의 연관 관계를 표현
답 : 커뮤니케이션 다이어그램
(Communication Diagram)


[51번 문제] <DB>

문제 : 시스템 자신이 필요로 하는 스키마 및 여러가지 객체에 관한 정보를 포함하고 있는 시스템 데이터 베이스 DBMS가 스스로 생성하고 유
답 : 시스템 카탈로그


[52번 문제] <애플리케이션 테스트>

문제 : 경계값 분석 Boundary Value Analysis
답 : 입력조건의 경계값을 테스트케이스로 선정


[53번 문제] <OSI 참조 모델>

문제 : 호스트의 IP 주소를 호스트와 연결된 네트워크 접속장치의 물리적 주소(MAC Address)로 변환
답 : ARP


[54번 문제] <UI, UX>

문제 : Mockup
답 : 실제화면과 유사하게 만든 정적인 형태 모형

파워목업, 발사믹 목업


[55번 문제] <공격 기법>

문제 : 백도어(Back Door, Trap Door)
답 : 시스템 설계자의 액세스 편의를 위해 시스템 보안을 제거하여 만들어놓은 비밀통로


[56번 문제] <RAID>

문제 : 미러링(Mirroring)

같은 데이터를 다른 디스크에 동일하게 복사하는 방식
답 : RAID 1


[57번 문제] <프로세스>

문제 : 페이징 기법(Paging)
답 : 프로그램과 주기억장치의 영역을 동일한 크기로 나눈 후 주기억장치의 영역에 적재시켜 실행


[58번 문제] <애플리케이션 성능 측정 지표>

문제 : 경과 시간 (Turn Around Time)
답 : 작업 의뢰 부터 처리 완료까지의 시간


[59번 문제] <프로세스>

문제 : 프로그램이나 데이터를 언제 주기억장치로 적재할 것 인지를 결정하는 전략
답 : 반입 전략(Fetch)


[60번 문제] <보안>

문제 : 메모리 버퍼 오버플로
답 : 할당된 메모리의 범위를 넘어선 위치에서 자료를 읽거나 쓰려고 할 때 발생

메모리 버퍼를 사용할 경우, 적절한 버퍼의 크기를 설정, 설정된 범위의 메모리 내에서 올바르게 읽거나 쓰게하여 방지할 수 있음


[61번 문제] <보안>

문제 : 인가된 사용자는 정보와 자원을 언제라도 사용할 수 있다.
답 : 가용성(Availability)


[62번 문제] <공격 기법>

문제 : 웹사이트를 사전에 감염시켜 해당 사이트에 방문했을 때 악성코드에 감염되게 하는 웹 기반 공격

감염된 PC를 기반으로 대상이 속한 시스템 접근
답 : Watering Hole


[63번 문제] <보안>

문제 : 국가안전보장국(NSA)에서 개발한 암호화 알고리즘, 클리퍼칩(IC칩)에 내장, 블록크리 64비트, 키 길이 80비트 주로 음성통신장비에 삽입, 음성데이터 암호화
답 : Skipjack


[64번 문제] <모듈>

문제 : 특정 시간에 처리되는 몇 개의 기능을 모아 하나의 모듈로 작성할 경우
답 : 시간적 응집도
(Temporal Cohesion)


[65번 문제] <UML>

문제 : 하나의 사물이 다른 사물에 포함돼 있는 관계
답 : 집합관계


[66번 문제] <DB>

문제 : 둘 이상의 트랜잭션 병행 실행되는 경우, 어느 하나의 트랜잭션 실행 중에 다른 트랜잭션의 연산이 끼어들 수 없음
답 : 트랜잭션의 독립성


[67번 문제] <RAID>

문제 : RAID 2~4
답 : 하나의 디스크에 오류 정정 부호를 비트(RAID 2)/바이트(RAID 3)/워드(RAID 4) 단위로 저장하고, 나머지 디스크는 RAID 0과 같이 활용하여 안정성을 높인 모드

하나의 디스크가 손상되어도 정상 가동이 가능하며 최소 3개의 디스크가 필요


[68번 문제] <DB>

문제 : 데이터를 복구할 수 있는 기점
답 : RPO


[69번 문제] <디자인 패턴>

문제 : Template Method
답 : 상위 클래스에서 골격 정의, 하위 클래스에서 세부 처리 구체화


[70번 문제] <네트워크>

문제 : 국가/대륙 간 사이트 연결

거리가 멀어 통신속도가 느리고 에러발생률이 높음
답 : WAN, Wide Area Network


[71번 문제] <보안솔루션>

문제 : 웹 기반 공격(SQL삽입공격, XSS) 방어할 목적
답 : 웹 방화벽(Web Firewall)


[72번 문제] <보안>

문제 : SSL(Secure Socket Layer)
답 : TCP/IP 계층과 애플리케이션 계층 사이에 위치, 인증, 암호화, 무결성 보장하는 업계 표준 프로토콜


[73번 문제] <DB>

문제 : RBAC
답 : 사용자의 역할에 따라 접근 권한 부여


[74번 문제] <객체 지향>

문제 : 상태 다이어그램 / 상태변화도

제어흐름, 상호작용, 동작순서 등 동적 행위를 표현
답 : 동적 모델링 (Dynamic)


[75번 문제] <디자인 패턴>

문제 : 복잡한 상호작용을 캡슐화하여 객체로 정의
객체 사이의 의존성을 줄여 결합도를 감소
답 : Mediator


[76번 문제] <보안>

문제 : RSA(Rivest Shamir Adelman)
답 : 공개키 암호화 알고리즘, 큰 숫자 소인수분해하기 어렵다는 것에 기반


[77번 문제] <디자인 패턴>

문제 : Iterator
답 : 자료 구조와 같이 접근이 잦은 객체에 대해 동일한 인터페이스를 사용하도록 하는 패턴


[78번 문제] <자료흐름도>

문제 : 자료를 변환시키는 시스템의 한부분을 나타냄
처리, 기능, 변환, 버블이라고도 함
답 : 프로세스 (Process)


[79번 문제] <RAID>

문제 : RAID 6
답 : RAID 5와 원리는 같으나 오류 정정 부호 2개를 저장하는 방식

두 개의 디스크가 손상되어도 정상 가동이 가능하며 최소 4개의 디스크가 필요하다.


[80번 문제] <네트워크>

문제 : 각각의 패킷들을 순서에 상관없이 독립적으로 운반
답 : 데이터그램 방식(비연결형 통신)


[81번 문제] <DB>

문제 : 데이터베이스 비정상 종료 시 트랙잭션의 시작(Start)과 완료(Commit)에 대한 기록이 있는 작업을 재작업
답 : Redo


[82번 문제] <소프트웨어 패키징>

문제 : 클라이언트/서버 방식
답 : 버전 관리 자료가 서버에 저장되어 관리 되는 방식

서버에 문제가 생기면 서버가 복구되기 전까지 다른 개발자와의 협업 및 버전 관리 작업은 중단

종류 : CVS, SVN(Subersion), CVSNT, Clear Case, CMVC, Perforce 등


[83번 문제] <보안솔루션>

문제 : 침입방지시스템(IPS, Intrusion Prevention System)
답 : 비정상적인 트래픽을 능동적으로 차단, 격리하는 등 방어 조치를 취하는 보안 솔루션, 방화벽과 IDS 결합

침입탐지기능으로 패킷 검사 후 비정상적 패킷 탐지되면 방화벽 기능으로 해당 패킷 차단


[84번 문제] <애플리케이션 테스트>

문제 : 하향식 통합 테스트
답 : 1. 주요 제어 모듈은 작성된 프로그램 사용, 종속 모듈은 스텁(Stub)으로 대체
2. 깊이 우선 또는 넓이 우선 등의 통합 방식에 따라 하위 모듈인 스텁들이 한번에 하나씩 실제 모듈로 교체
3. 모듈이 통합될 때마다 테스트 실시
4. 새로운 오류 발생하지 않음을 보증하기 위해 회귀 테스트 실시


[85번 문제] <모듈>

문제 : 우연적 응집도
(Coinfidental Cohesion)
답 : 모듈 내부의 각 구성 요소들이 서로 관련 없는 요소로만 구성


[86번 문제] <보안>

문제 : 인가된 사용자에게만 접근이 허용, 정보 전송 중 노출되어도 읽을 수 없음
답 : 기밀성(Confidentiality)


[87번 문제] <모듈>

문제 : 제어 결합도
(Control Coupling)
답 : 어떤 모듈이 다른 모듈 내부의 논리적인 흐름을 제어하기 위해 제어 신호나 제어 요소를 전달
하위 모듈에서 상위 모듈로 제어 신호가 이동하여 하위 모듈이 상위 모듈에게 처리 명령을 내리는 권리 전도 현상 발생


[88번 문제] <애플리케이션 테스트>

문제 : 제어구조 검사
답 : 조건 검사 Condition Test

루프 검사 Loop Test

데이터 흐름 검사 Data Flow Test


[89번 문제] <보안>

문제 : 인가된 사용자만 수정할 수 있다
답 : 무결성(Integrity)


[90번 문제] <UI, UX>

문제 : Prototype
답 : 실제 구형된 것처럼 테스트가 가능한 동적인 형태


[91번 문제] <DB>

문제 : 주체와 객체의 등급을 비교
답 : MAC


[92번 문제] <애플리케이션 테스트>

문제 : 원인-효과 그래프 검사 Cause-Effect Graphing Testing
답 : 원인과 효과에 대한 그래프로 확인


[93번 문제] <프로세스>

문제 : PCB(Process Control Block)
답 : 운영체제가 프로세스에 대한 중요한 정보를 저장해놓는 곳


[94번 문제] <OSI 참조 모델>

문제 : 세션 계층
(Session)
답 : 두 응용프로그램 간의 프로세스 사이에서
데이터가 송수신 될 수 있도록
가상경로 수립/해제


[95번 문제] <프로세스>

문제 : LRU
(Least Recently Used)
답 : 최근에 가장 오랫동안 사용하지 않은 페이지를 교체


[96번 문제] <프로세스>

문제 : 일정 위치의 페이지 집중 액세스
답 : Spatial Locality
(공간 구역성)


[97번 문제] <프로세스>

문제 : FCFS(First Come First Service)
답 : 준비상태 큐에 도착한 순서에 따라 CPU할당


[98번 문제] <프로세스>

문제 : PageFrame
답 : 페이지 크기로 일정하게 나누어진 주기억장치의 단위


[99번 문제] <프로세스>

문제 : 집중되는 페이지의 집합
답 : Working Set


[100번 문제] <소프트웨어 개발 모형>

문제 : 애자일 (Agile)
답 : 절차나 형식 보다는 사람이 중심이 되어 사용자의 요구 변화에 신속하게 대응, 소규모 반복적 SW개발 방법론 

핵심가치

- 사람 중심
- 소프트웨어 중심
- 협업 중심
- 변화 대응

특징

- 요구변화 민첩
- 신속한 피드백
- 점진적 반복 개발
- 소규모 개발


